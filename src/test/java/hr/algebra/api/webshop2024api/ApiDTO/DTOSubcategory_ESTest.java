/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 21:50:56 GMT 2024
 */

package hr.algebra.api.webshop2024api.ApiDTO;

import org.junit.Test;
import static org.junit.Assert.*;
import hr.algebra.api.webshop2024api.ApiDTO.DTOCategory;
import hr.algebra.api.webshop2024api.ApiDTO.DTOSubcategory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DTOSubcategory_ESTest extends DTOSubcategory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory("0lcvq#Bn/");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory(")", dTOCategory0);
      Long long0 = new Long(0L);
      dTOSubcategory0.setSubcategoryId(long0);
      Long long1 = dTOSubcategory0.getSubcategoryId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory("0lcvq#Bn/");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory(")", dTOCategory0);
      Long long0 = new Long(4818L);
      dTOSubcategory0.setSubcategoryId(long0);
      Long long1 = dTOSubcategory0.getSubcategoryId();
      assertEquals(4818L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Long long0 = new Long((-64L));
      DTOCategory dTOCategory0 = new DTOCategory("UL!8qG.");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory(long0, (String) null, dTOCategory0);
      Long long1 = dTOSubcategory0.getSubcategoryId();
      assertEquals((-64L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory("0lcvq#Bn/");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory(")", dTOCategory0);
      String string0 = dTOSubcategory0.getName();
      assertEquals(")", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory("}#%9U*OOwJb]B", (DTOCategory) null);
      dTOSubcategory0.setName("");
      String string0 = dTOSubcategory0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory("0lcvq#Bn/");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory(")", dTOCategory0);
      DTOCategory dTOCategory1 = dTOSubcategory0.getCategory();
      assertNull(dTOCategory1.getCategoryId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory("0lcvq#Bn/");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory(")", dTOCategory0);
      Long long0 = dTOSubcategory0.getSubcategoryId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory();
      DTOCategory dTOCategory0 = dTOSubcategory0.getCategory();
      assertNull(dTOCategory0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory();
      String string0 = dTOSubcategory0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory("hr.agebrI.api.webshop2024api.ApiDO.TOCatgory");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory("hr.agebrI.api.webshop2024api.ApiDO.TOCatgory", dTOCategory0);
      dTOSubcategory0.setCategory(dTOCategory0);
      assertEquals("hr.agebrI.api.webshop2024api.ApiDO.TOCatgory", dTOCategory0.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = new Long(1L);
      DTOCategory dTOCategory0 = new DTOCategory(long0, "l@lOQew%F4^n/#|");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory(long0, "l@lOQew%F4^n/#|", dTOCategory0);
      String string0 = dTOSubcategory0.toString();
      assertEquals("DTOSubcategory(subcategoryId=1, name=l@lOQew%F4^n/#|, category=DTOCategory(categoryId=1, name=l@lOQew%F4^n/#|))", string0);
  }
}
