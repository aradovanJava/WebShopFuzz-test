/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 22:08:29 GMT 2024
 */

package hr.algebra.api.webshop2024api.ApiDTO;

import org.junit.Test;
import static org.junit.Assert.*;
import hr.algebra.api.webshop2024api.ApiDTO.DTOAuthority;
import hr.algebra.api.webshop2024api.ApiDTO.DTOUser;
import hr.algebra.dal.webshop2024dal.Enum.Role;
import java.util.LinkedHashSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DTOAuthority_ESTest extends DTOAuthority_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      LinkedHashSet<DTOAuthority> linkedHashSet0 = new LinkedHashSet<DTOAuthority>();
      DTOUser dTOUser0 = new DTOUser("DTOUser(username=", "}z~iX#7\"*_^-q", true, "}z~iX#7\"*_^-q", linkedHashSet0);
      dTOAuthority0.setUser(dTOUser0);
      DTOUser dTOUser1 = dTOAuthority0.getUser();
      assertSame(dTOUser1, dTOUser0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      Long long0 = Long.valueOf(0L);
      dTOAuthority0.setId(long0);
      Long long1 = dTOAuthority0.getId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DTOUser dTOUser0 = new DTOUser();
      Role role0 = Role.ROLE_ADMIN;
      DTOAuthority dTOAuthority0 = new DTOAuthority(dTOUser0, role0);
      Long long0 = new Long(1L);
      dTOAuthority0.setId(long0);
      Long long1 = dTOAuthority0.getId();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      Long long0 = Long.getLong("/t{DXU2,DU", (-1512L));
      dTOAuthority0.setId(long0);
      Long long1 = dTOAuthority0.getId();
      assertEquals((-1512L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      dTOAuthority0.getAuthority();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DTOUser dTOUser0 = new DTOUser();
      Role role0 = Role.ROLE_ADMIN;
      DTOAuthority dTOAuthority0 = new DTOAuthority(dTOUser0, role0);
      Role role1 = dTOAuthority0.getAuthority();
      assertSame(role1, role0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      Role role0 = Role.ROLE_SHOPPER;
      dTOAuthority0.setAuthority(role0);
      assertNull(dTOAuthority0.getId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      DTOUser dTOUser0 = new DTOUser();
      dTOAuthority0.setUser(dTOUser0);
      DTOUser dTOUser1 = dTOAuthority0.getUser();
      assertFalse(dTOUser1.isEnabled());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      String string0 = dTOAuthority0.toString();
      assertEquals("DTOAuthority(id=null, user=null, authority=null)", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      DTOUser dTOUser0 = dTOAuthority0.getUser();
      assertNull(dTOUser0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      Long long0 = dTOAuthority0.getId();
      assertNull(long0);
  }
}
