/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 22:05:33 GMT 2024
 */

package hr.algebra.api.webshop2024api.ApiDTO;

import org.junit.Test;
import static org.junit.Assert.*;
import hr.algebra.api.webshop2024api.ApiDTO.DTOCategory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DTOCategory_ESTest extends DTOCategory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory("${_mc$0W");
      String string0 = dTOCategory0.getName();
      assertEquals("${_mc$0W", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory("");
      String string0 = dTOCategory0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory("");
      Long long0 = new Long(0L);
      dTOCategory0.setCategoryId(long0);
      Long long1 = dTOCategory0.getCategoryId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory("${_mc$0W");
      Long long0 = new Long(4204L);
      dTOCategory0.setCategoryId(long0);
      Long long1 = dTOCategory0.getCategoryId();
      assertEquals(4204L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory();
      Long long0 = new Long((-313L));
      dTOCategory0.setCategoryId(long0);
      Long long1 = dTOCategory0.getCategoryId();
      assertEquals((-313L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory();
      String string0 = dTOCategory0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Long long0 = new Long((-798L));
      DTOCategory dTOCategory0 = new DTOCategory(long0, "u~njc");
      dTOCategory0.setCategoryId(long0);
      assertEquals((-798L), (long)dTOCategory0.getCategoryId());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Long long0 = new Long((-798L));
      DTOCategory dTOCategory0 = new DTOCategory(long0, "u~njc");
      String string0 = dTOCategory0.toString();
      assertEquals("DTOCategory(categoryId=-798, name=u~njc)", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Long long0 = new Long((-798L));
      DTOCategory dTOCategory0 = new DTOCategory(long0, "u~njc");
      dTOCategory0.setName("u~njc");
      assertEquals((-798L), (long)dTOCategory0.getCategoryId());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      DTOCategory dTOCategory0 = new DTOCategory();
      Long long0 = dTOCategory0.getCategoryId();
      assertNull(long0);
  }
}
