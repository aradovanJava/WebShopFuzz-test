/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 22:20:54 GMT 2024
 */

package hr.algebra.api.webshop2024api.ApiDTO;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import hr.algebra.api.webshop2024api.ApiDTO.DTOCategory;
import hr.algebra.api.webshop2024api.ApiDTO.DTOProduct;
import hr.algebra.api.webshop2024api.ApiDTO.DTOSubcategory;
import hr.algebra.dal.webshop2024dal.Entity.Image;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class DTOProduct_ESTest extends DTOProduct_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      DTOCategory dTOCategory0 = new DTOCategory();
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory("", dTOCategory0);
      dTOProduct0.setSubcategory(dTOSubcategory0);
      DTOSubcategory dTOSubcategory1 = dTOProduct0.getSubcategory();
      assertSame(dTOSubcategory1, dTOSubcategory0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory();
      DTOProduct dTOProduct0 = new DTOProduct("gThH{5u`'s#C,", "gThH{5u`'s#C,", bigDecimal0, dTOSubcategory0, "gThH{5u`'s#C,");
      Long long0 = new Long(0L);
      dTOProduct0.setProductId(long0);
      Long long1 = dTOProduct0.getProductId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      Long long0 = new Long(4271L);
      dTOProduct0.setProductId(long0);
      Long long1 = dTOProduct0.getProductId();
      assertEquals(4271L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory();
      DTOProduct dTOProduct0 = new DTOProduct("", "", bigDecimal0, dTOSubcategory0, (String) null);
      Long long0 = new Long((-1643L));
      dTOProduct0.setProductId(long0);
      Long long1 = dTOProduct0.getProductId();
      assertEquals((-1643L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Long long0 = new Long((-395L));
      DTOCategory dTOCategory0 = new DTOCategory("bgCz(Ohm");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory(long0, "5+uv4'[z5gw<L", dTOCategory0);
      Image image0 = new Image("5+uv4'[z5gw<L");
      DTOProduct dTOProduct0 = new DTOProduct("5+uv4'[z5gw<L", "5+uv4'[z5gw<L", bigDecimal0, dTOSubcategory0, image0);
      BigDecimal bigDecimal1 = dTOProduct0.getPrice();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      dTOProduct0.setPrice(bigDecimal0);
      BigDecimal bigDecimal1 = dTOProduct0.getPrice();
      assertEquals((short)10, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      BigDecimal bigDecimal0 = new BigDecimal((-2169.3));
      dTOProduct0.setPrice(bigDecimal0);
      BigDecimal bigDecimal1 = dTOProduct0.getPrice();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0L);
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory();
      Image image0 = new Image();
      DTOProduct dTOProduct0 = new DTOProduct("@xRKUSPku", "@xRKUSPku", bigDecimal0, dTOSubcategory0, image0);
      String string0 = dTOProduct0.getName();
      assertEquals("@xRKUSPku", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      DTOProduct dTOProduct0 = new DTOProduct("", "", bigDecimal0, (DTOSubcategory) null, ", subcategory=");
      String string0 = dTOProduct0.getName();
      assertEquals("", string0);
      assertEquals(", subcategory=", dTOProduct0.getImageUrl());
      assertEquals("", dTOProduct0.getDescription());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      dTOProduct0.setImageUrl("(fO[N:");
      String string0 = dTOProduct0.getImageUrl();
      assertEquals("(fO[N:", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      dTOProduct0.setImageUrl("");
      String string0 = dTOProduct0.getImageUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory();
      DTOProduct dTOProduct0 = new DTOProduct("{0.sD9|{%()j<5&`F", "{0.sD9|{%()j<5&`F", bigDecimal0, dTOSubcategory0, "{0.sD9|{%()j<5&`F");
      String string0 = dTOProduct0.getDescription();
      assertEquals("{0.sD9|{%()j<5&`F", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      DTOProduct dTOProduct0 = new DTOProduct("", "", bigDecimal0, (DTOSubcategory) null, ", subcategory=");
      String string0 = dTOProduct0.getDescription();
      assertEquals(", subcategory=", dTOProduct0.getImageUrl());
      assertEquals("", dTOProduct0.getName());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Long long0 = new Long((-395L));
      DTOCategory dTOCategory0 = new DTOCategory("bgCz(Ohm");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory(long0, "5+uv4'[z5gw<L", dTOCategory0);
      Image image0 = new Image("5+uv4'[z5gw<L");
      DTOProduct dTOProduct0 = new DTOProduct("5+uv4'[z5gw<L", "5+uv4'[z5gw<L", bigDecimal0, dTOSubcategory0, image0);
      String string0 = dTOProduct0.getB64image();
      assertEquals("5+uv4'[z5gw<L", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      dTOProduct0.setB64image("");
      String string0 = dTOProduct0.getB64image();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = new Long((-2896L));
      DTOCategory dTOCategory0 = new DTOCategory("DTOCategory(categoryId=");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory(long0, "", dTOCategory0);
      DTOProduct dTOProduct0 = null;
      try {
        dTOProduct0 = new DTOProduct(", name=", "", (BigDecimal) null, dTOSubcategory0, (Image) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.ApiDTO.DTOProduct", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      String string0 = dTOProduct0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      String string0 = dTOProduct0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      BigDecimal bigDecimal0 = dTOProduct0.getPrice();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      String string0 = dTOProduct0.getImageUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      String string0 = dTOProduct0.getB64image();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      Long long0 = dTOProduct0.getProductId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      DTOSubcategory dTOSubcategory0 = dTOProduct0.getSubcategory();
      assertNull(dTOSubcategory0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory();
      Image image0 = new Image();
      DTOProduct dTOProduct0 = new DTOProduct("53Y{$r6u", "53Y{$r6u", bigDecimal0, dTOSubcategory0, image0);
      dTOProduct0.setDescription("53Y{$r6u");
      assertEquals("53Y{$r6u", dTOProduct0.getName());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory();
      Image image0 = new Image();
      DTOProduct dTOProduct0 = new DTOProduct("53Y{$r6u", "53Y{$r6u", bigDecimal0, dTOSubcategory0, image0);
      dTOProduct0.setName("53Y{$r6u");
      assertEquals("53Y{$r6u", dTOProduct0.getName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DTOProduct dTOProduct0 = new DTOProduct();
      String string0 = dTOProduct0.toString();
      assertEquals("DTOProduct(productId=null, name=null, description=null, price=null, subcategory=null, imageUrl=null, b64image=null)", string0);
  }
}
