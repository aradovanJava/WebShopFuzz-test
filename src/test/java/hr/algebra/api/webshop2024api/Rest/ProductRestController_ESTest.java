/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 22:23:46 GMT 2024
 */

package hr.algebra.api.webshop2024api.Rest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import hr.algebra.api.webshop2024api.ApiDTO.DTOCategory;
import hr.algebra.api.webshop2024api.ApiDTO.DTOProduct;
import hr.algebra.api.webshop2024api.ApiDTO.DTOSubcategory;
import hr.algebra.api.webshop2024api.ApiMapper.ProductMapper;
import hr.algebra.api.webshop2024api.ApiMapper.ProductMapperImpl;
import hr.algebra.api.webshop2024api.ApiMapper.SubcategoryMapper;
import hr.algebra.api.webshop2024api.ApiMapper.SubcategoryMapperImpl;
import hr.algebra.api.webshop2024api.Rest.ProductRestController;
import hr.algebra.bl.webshop2024bl.Service.ProductService;
import hr.algebra.dal.webshop2024dal.Entity.Category;
import hr.algebra.dal.webshop2024dal.Entity.Image;
import hr.algebra.dal.webshop2024dal.Entity.Product;
import hr.algebra.dal.webshop2024dal.Entity.Subcategory;
import java.math.BigDecimal;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProductRestController_ESTest extends ProductRestController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      Product product0 = new Product();
      DTOProduct dTOProduct0 = productMapperImpl0.ProductToDTOProduct(product0);
      ProductService productService0 = mock(ProductService.class, new ViolatedAssumptionAnswer());
      doReturn(product0).when(productService0).findById(anyLong());
      doReturn((Product) null).when(productService0).save(any(hr.algebra.dal.webshop2024dal.Entity.Product.class));
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      ProductRestController productRestController0 = new ProductRestController(productService0, productMapperImpl0, subcategoryMapperImpl0);
      CompletableFuture<DTOProduct> completableFuture0 = productRestController0.updateProduct((-1181), dTOProduct0);
      assertNotNull(completableFuture0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      ProductRestController productRestController0 = new ProductRestController((ProductService) null, (ProductMapper) null, subcategoryMapperImpl0);
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory();
      Image image0 = new Image("Jf*38AL%w/pq\"");
      DTOProduct dTOProduct0 = new DTOProduct("", "", (BigDecimal) null, dTOSubcategory0, image0);
      // Undeclared exception!
      try { 
        productRestController0.updateProduct(223, dTOProduct0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ProductRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      ProductRestController productRestController0 = new ProductRestController((ProductService) null, productMapperImpl0, subcategoryMapperImpl0);
      // Undeclared exception!
      try { 
        productRestController0.findProductById((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ProductRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      ProductService productService0 = mock(ProductService.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(productService0).findAll();
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      ProductRestController productRestController0 = new ProductRestController(productService0, productMapperImpl0, subcategoryMapperImpl0);
      // Undeclared exception!
      try { 
        productRestController0.findAllProducts();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ProductRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      ProductRestController productRestController0 = new ProductRestController((ProductService) null, (ProductMapper) null, subcategoryMapperImpl0);
      // Undeclared exception!
      try { 
        productRestController0.deleteProduct((-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ProductRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      ProductRestController productRestController0 = new ProductRestController((ProductService) null, productMapperImpl0, subcategoryMapperImpl0);
      // Undeclared exception!
      try { 
        productRestController0.createProduct((DTOProduct) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ProductRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProductService productService0 = mock(ProductService.class, new ViolatedAssumptionAnswer());
      doReturn((Product) null).when(productService0).findById(anyLong());
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      ProductRestController productRestController0 = new ProductRestController(productService0, productMapperImpl0, (SubcategoryMapper) null);
      // Undeclared exception!
      try { 
        productRestController0.deleteProduct((-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Product id not found - -1
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ProductRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(1.0);
      Long long0 = new Long(1852L);
      Category category0 = new Category("");
      Subcategory subcategory0 = new Subcategory(long0, "", category0);
      Image image0 = new Image("");
      Product product0 = new Product("", "", bigDecimal0, subcategory0, image0);
      ProductService productService0 = mock(ProductService.class, new ViolatedAssumptionAnswer());
      doReturn(product0).when(productService0).findById(anyLong());
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      ProductRestController productRestController0 = new ProductRestController(productService0, productMapperImpl0, (SubcategoryMapper) null);
      CompletableFuture<String> completableFuture0 = productRestController0.deleteProduct(320);
      assertNotNull(completableFuture0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      ProductService productService0 = mock(ProductService.class, new ViolatedAssumptionAnswer());
      doReturn((Product) null).when(productService0).findById(anyLong());
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      ProductRestController productRestController0 = new ProductRestController(productService0, productMapperImpl0, subcategoryMapperImpl0);
      DTOProduct dTOProduct0 = new DTOProduct();
      // Undeclared exception!
      try { 
        productRestController0.updateProduct(0, dTOProduct0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Product not found for id: 0
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ProductRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProductService productService0 = mock(ProductService.class, new ViolatedAssumptionAnswer());
      doReturn((Product) null).when(productService0).findById(anyLong());
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      ProductRestController productRestController0 = new ProductRestController(productService0, productMapperImpl0, subcategoryMapperImpl0);
      // Undeclared exception!
      try { 
        productRestController0.findProductById(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Product not found for id: 0
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ProductRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Subcategory subcategory0 = new Subcategory();
      Image image0 = new Image("TN1DT");
      Product product0 = new Product("TN1DT", "TN1DT", bigDecimal0, subcategory0, image0);
      ProductService productService0 = mock(ProductService.class, new ViolatedAssumptionAnswer());
      doReturn(product0).when(productService0).findById(anyLong());
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      ProductRestController productRestController0 = new ProductRestController(productService0, productMapperImpl0, subcategoryMapperImpl0);
      CompletableFuture<DTOProduct> completableFuture0 = productRestController0.findProductById(0);
      assertNotNull(completableFuture0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      LinkedList<Product> linkedList0 = new LinkedList<Product>();
      ProductService productService0 = mock(ProductService.class, new ViolatedAssumptionAnswer());
      doReturn(linkedList0).when(productService0).findAll();
      ProductRestController productRestController0 = new ProductRestController(productService0, productMapperImpl0, (SubcategoryMapper) null);
      CompletableFuture<List<DTOProduct>> completableFuture0 = productRestController0.findAllProducts();
      assertNotNull(completableFuture0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Image image0 = new Image("TN1DT");
      ProductService productService0 = mock(ProductService.class, new ViolatedAssumptionAnswer());
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      ProductRestController productRestController0 = new ProductRestController(productService0, productMapperImpl0, subcategoryMapperImpl0);
      Long long0 = new Long(0);
      DTOCategory dTOCategory0 = new DTOCategory("hFzJu.7");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory(long0, "hFzJu.7", dTOCategory0);
      DTOProduct dTOProduct0 = new DTOProduct((String) null, (String) null, bigDecimal0, dTOSubcategory0, image0);
      // Undeclared exception!
      try { 
        productRestController0.createProduct(dTOProduct0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ProductRestController", e);
      }
  }
}
