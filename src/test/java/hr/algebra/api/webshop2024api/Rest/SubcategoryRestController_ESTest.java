/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 22:25:04 GMT 2024
 */

package hr.algebra.api.webshop2024api.Rest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import hr.algebra.api.webshop2024api.ApiDTO.DTOCategory;
import hr.algebra.api.webshop2024api.ApiDTO.DTOSubcategory;
import hr.algebra.api.webshop2024api.ApiMapper.CategoryMapper;
import hr.algebra.api.webshop2024api.ApiMapper.CategoryMapperImpl;
import hr.algebra.api.webshop2024api.ApiMapper.SubcategoryMapper;
import hr.algebra.api.webshop2024api.ApiMapper.SubcategoryMapperImpl;
import hr.algebra.api.webshop2024api.Rest.SubcategoryRestController;
import hr.algebra.bl.webshop2024bl.Service.SubcategoryService;
import hr.algebra.dal.webshop2024dal.Entity.Category;
import hr.algebra.dal.webshop2024dal.Entity.Subcategory;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SubcategoryRestController_ESTest extends SubcategoryRestController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Long long0 = new Long(823L);
      Category category0 = new Category("hr.algebra.api.webshop2024api.ApiDTO.DTOCategory");
      Subcategory subcategory0 = new Subcategory(long0, "hr.algebra.api.webshop2024api.ApiDTO.DTOCategory", category0);
      SubcategoryService subcategoryService0 = mock(SubcategoryService.class, new ViolatedAssumptionAnswer());
      doReturn(subcategory0).when(subcategoryService0).findById(anyLong());
      doReturn((Subcategory) null).when(subcategoryService0).save(any(hr.algebra.dal.webshop2024dal.Entity.Subcategory.class));
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      CategoryMapperImpl categoryMapperImpl0 = new CategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController(subcategoryService0, subcategoryMapperImpl0, categoryMapperImpl0);
      DTOCategory dTOCategory0 = categoryMapperImpl0.CategoryItemToDTOCategory(category0);
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory(long0, "&pzc0<N(kWlG1", dTOCategory0);
      CompletableFuture<DTOSubcategory> completableFuture0 = subcategoryRestController0.updateSubcategory(0, dTOSubcategory0);
      assertNotNull(completableFuture0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubcategoryService subcategoryService0 = mock(SubcategoryService.class, new ViolatedAssumptionAnswer());
      doReturn((Subcategory) null).when(subcategoryService0).save(any(hr.algebra.dal.webshop2024dal.Entity.Subcategory.class));
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController(subcategoryService0, subcategoryMapperImpl0, (CategoryMapper) null);
      Subcategory subcategory0 = new Subcategory();
      DTOSubcategory dTOSubcategory0 = subcategoryMapperImpl0.SubcategoryToDTOSubcategory(subcategory0);
      CompletableFuture<DTOSubcategory> completableFuture0 = subcategoryRestController0.createSubcategory(dTOSubcategory0);
      assertNotNull(completableFuture0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      CategoryMapperImpl categoryMapperImpl0 = new CategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController((SubcategoryService) null, subcategoryMapperImpl0, categoryMapperImpl0);
      Long long0 = Long.valueOf((-1L));
      Subcategory subcategory0 = new Subcategory(long0, "");
      DTOSubcategory dTOSubcategory0 = subcategoryMapperImpl0.SubcategoryToDTOSubcategory(subcategory0);
      // Undeclared exception!
      try { 
        subcategoryRestController0.updateSubcategory(1, dTOSubcategory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.SubcategoryRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      CategoryMapperImpl categoryMapperImpl0 = new CategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController((SubcategoryService) null, subcategoryMapperImpl0, categoryMapperImpl0);
      // Undeclared exception!
      try { 
        subcategoryRestController0.findSubcategoryById(12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.SubcategoryRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SubcategoryService subcategoryService0 = mock(SubcategoryService.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(subcategoryService0).findAll();
      CategoryMapperImpl categoryMapperImpl0 = new CategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController(subcategoryService0, (SubcategoryMapper) null, categoryMapperImpl0);
      // Undeclared exception!
      try { 
        subcategoryRestController0.findAllSubcategories();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.SubcategoryRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      CategoryMapperImpl categoryMapperImpl0 = new CategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController((SubcategoryService) null, subcategoryMapperImpl0, categoryMapperImpl0);
      // Undeclared exception!
      try { 
        subcategoryRestController0.deleteSubcategory(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.SubcategoryRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubcategoryService subcategoryService0 = mock(SubcategoryService.class, new ViolatedAssumptionAnswer());
      doReturn((Subcategory) null).when(subcategoryService0).findById(anyLong());
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      CategoryMapperImpl categoryMapperImpl0 = new CategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController(subcategoryService0, subcategoryMapperImpl0, categoryMapperImpl0);
      // Undeclared exception!
      try { 
        subcategoryRestController0.deleteSubcategory(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Subcategory id not found - 0
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.SubcategoryRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Subcategory subcategory0 = new Subcategory();
      CategoryMapperImpl categoryMapperImpl0 = new CategoryMapperImpl();
      SubcategoryService subcategoryService0 = mock(SubcategoryService.class, new ViolatedAssumptionAnswer());
      doReturn(subcategory0).when(subcategoryService0).findById(anyLong());
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController(subcategoryService0, subcategoryMapperImpl0, categoryMapperImpl0);
      CompletableFuture<String> completableFuture0 = subcategoryRestController0.deleteSubcategory(0);
      assertNotNull(completableFuture0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubcategoryService subcategoryService0 = mock(SubcategoryService.class, new ViolatedAssumptionAnswer());
      doReturn((Subcategory) null).when(subcategoryService0).findById(anyLong());
      CategoryMapperImpl categoryMapperImpl0 = new CategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController(subcategoryService0, (SubcategoryMapper) null, categoryMapperImpl0);
      Long long0 = new Long(1);
      DTOCategory dTOCategory0 = new DTOCategory(long0, "hr.algebra.dal.webshop2024dal.Entity.Subcategory");
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory("hr.algebra.dal.webshop2024dal.Entity.Subcategory", dTOCategory0);
      // Undeclared exception!
      try { 
        subcategoryRestController0.updateSubcategory(1, dTOSubcategory0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Subcategory not found for id: 1
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.SubcategoryRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubcategoryService subcategoryService0 = mock(SubcategoryService.class, new ViolatedAssumptionAnswer());
      doReturn((Subcategory) null).when(subcategoryService0).findById(anyLong());
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      CategoryMapperImpl categoryMapperImpl0 = new CategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController(subcategoryService0, subcategoryMapperImpl0, categoryMapperImpl0);
      // Undeclared exception!
      try { 
        subcategoryRestController0.findSubcategoryById(28);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Subcategory not found for id: 28
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.SubcategoryRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Subcategory subcategory0 = new Subcategory();
      CategoryMapperImpl categoryMapperImpl0 = new CategoryMapperImpl();
      SubcategoryService subcategoryService0 = mock(SubcategoryService.class, new ViolatedAssumptionAnswer());
      doReturn(subcategory0).when(subcategoryService0).findById(anyLong());
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController(subcategoryService0, subcategoryMapperImpl0, categoryMapperImpl0);
      CompletableFuture<DTOSubcategory> completableFuture0 = subcategoryRestController0.findSubcategoryById(0);
      assertNotNull(completableFuture0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CategoryMapperImpl categoryMapperImpl0 = new CategoryMapperImpl();
      LinkedList<Subcategory> linkedList0 = new LinkedList<Subcategory>();
      SubcategoryService subcategoryService0 = mock(SubcategoryService.class, new ViolatedAssumptionAnswer());
      doReturn(linkedList0).when(subcategoryService0).findAll();
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController(subcategoryService0, subcategoryMapperImpl0, categoryMapperImpl0);
      CompletableFuture<List<DTOSubcategory>> completableFuture0 = subcategoryRestController0.findAllSubcategories();
      assertNotNull(completableFuture0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SubcategoryService subcategoryService0 = mock(SubcategoryService.class, new ViolatedAssumptionAnswer());
      CategoryMapperImpl categoryMapperImpl0 = new CategoryMapperImpl();
      SubcategoryRestController subcategoryRestController0 = new SubcategoryRestController(subcategoryService0, (SubcategoryMapper) null, categoryMapperImpl0);
      SubcategoryMapperImpl subcategoryMapperImpl0 = new SubcategoryMapperImpl();
      Subcategory subcategory0 = new Subcategory();
      DTOSubcategory dTOSubcategory0 = subcategoryMapperImpl0.SubcategoryToDTOSubcategory(subcategory0);
      // Undeclared exception!
      try { 
        subcategoryRestController0.createSubcategory(dTOSubcategory0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.SubcategoryRestController", e);
      }
  }
}
