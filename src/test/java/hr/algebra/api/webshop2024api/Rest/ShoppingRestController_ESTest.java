/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 22:01:23 GMT 2024
 */

package hr.algebra.api.webshop2024api.Rest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import hr.algebra.api.webshop2024api.ApiMapper.CartItemMapperImpl;
import hr.algebra.api.webshop2024api.Rest.ShoppingRestController;
import hr.algebra.bl.webshop2024bl.Service.CartItemService;
import hr.algebra.bl.webshop2024bl.Service.ShoppingCartService;
import hr.algebra.dal.webshop2024dal.Entity.CartItem;
import hr.algebra.dal.webshop2024dal.Entity.ShoppingCart;
import java.util.List;
import java.util.Optional;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ShoppingRestController_ESTest extends ShoppingRestController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      CartItemService cartItemService0 = mock(CartItemService.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(cartItemService0).findAll();
      ShoppingCartService shoppingCartService0 = mock(ShoppingCartService.class, new ViolatedAssumptionAnswer());
      CartItemMapperImpl cartItemMapperImpl0 = new CartItemMapperImpl();
      ShoppingRestController shoppingRestController0 = new ShoppingRestController(cartItemService0, shoppingCartService0, cartItemMapperImpl0);
      // Undeclared exception!
      try { 
        shoppingRestController0.findAllCartItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ShoppingRestController", e);
      }
  }

  /*
  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      CartItemService cartItemService0 = mock(CartItemService.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(cartItemService0).findByShoppingCart(any(hr.algebra.dal.webshop2024dal.Entity.ShoppingCart.class));
      ShoppingCartService shoppingCartService0 = mock(ShoppingCartService.class, new ViolatedAssumptionAnswer());
      doReturn((ShoppingCart) null).when(shoppingCartService0).findById(anyLong());
      CartItemMapperImpl cartItemMapperImpl0 = new CartItemMapperImpl();
      ShoppingRestController shoppingRestController0 = new ShoppingRestController(cartItemService0, shoppingCartService0, cartItemMapperImpl0);
      // Undeclared exception!
      try { 
        shoppingRestController0.findAllCartItemsForShoppingCart(1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Shopping cart not found for id: 1
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ShoppingRestController", e);
      }
  }

   */

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      CartItemService cartItemService0 = mock(CartItemService.class, new ViolatedAssumptionAnswer());
      CartItemMapperImpl cartItemMapperImpl0 = new CartItemMapperImpl();
      ShoppingRestController shoppingRestController0 = new ShoppingRestController(cartItemService0, (ShoppingCartService) null, cartItemMapperImpl0);
      // Undeclared exception!
      try { 
        shoppingRestController0.findAllCartItemsForShoppingCart((-918));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ShoppingRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      CartItemService cartItemService0 = mock(CartItemService.class, new ViolatedAssumptionAnswer());
      ShoppingCartService shoppingCartService0 = mock(ShoppingCartService.class, new ViolatedAssumptionAnswer());
      doReturn((Optional) null).when(shoppingCartService0).findBySessionId(anyString());
      CartItemMapperImpl cartItemMapperImpl0 = new CartItemMapperImpl();
      CartItem cartItem0 = new CartItem();
      Long long0 = Long.getLong("tlx:rONAE``p]T", 1L);
      cartItem0.setCartItemId(long0);
      cartItemMapperImpl0.CartItemToDTOCartItem(cartItem0);
      ShoppingRestController shoppingRestController0 = new ShoppingRestController(cartItemService0, shoppingCartService0, cartItemMapperImpl0);
      // Undeclared exception!
      try { 
        shoppingRestController0.findAllCartItemsForSession("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ShoppingRestController", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CartItemService cartItemService0 = mock(CartItemService.class, new ViolatedAssumptionAnswer());
      CartItemMapperImpl cartItemMapperImpl0 = new CartItemMapperImpl();
      ShoppingRestController shoppingRestController0 = new ShoppingRestController(cartItemService0, (ShoppingCartService) null, cartItemMapperImpl0);
      // Undeclared exception!
      try { 
        shoppingRestController0.findAllCartItemsForUsername("k1aFG%nqz)b");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("hr.algebra.api.webshop2024api.Rest.ShoppingRestController", e);
      }
  }
}
