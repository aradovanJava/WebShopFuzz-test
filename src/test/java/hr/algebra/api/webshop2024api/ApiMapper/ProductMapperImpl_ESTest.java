/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 21:59:42 GMT 2024
 */

package hr.algebra.api.webshop2024api.ApiMapper;

import org.junit.Test;
import static org.junit.Assert.*;
import hr.algebra.api.webshop2024api.ApiDTO.DTOCategory;
import hr.algebra.api.webshop2024api.ApiDTO.DTOProduct;
import hr.algebra.api.webshop2024api.ApiDTO.DTOSubcategory;
import hr.algebra.api.webshop2024api.ApiMapper.ProductMapperImpl;
import hr.algebra.dal.webshop2024dal.Entity.Category;
import hr.algebra.dal.webshop2024dal.Entity.Image;
import hr.algebra.dal.webshop2024dal.Entity.Product;
import hr.algebra.dal.webshop2024dal.Entity.Subcategory;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ProductMapperImpl_ESTest extends ProductMapperImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      DTOSubcategory dTOSubcategory0 = productMapperImpl0.subcategoryToDTOSubcategory((Subcategory) null);
      assertNull(dTOSubcategory0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      Subcategory subcategory0 = productMapperImpl0.dTOSubcategoryToSubcategory((DTOSubcategory) null);
      assertNull(subcategory0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      Category category0 = productMapperImpl0.dTOCategoryToCategory((DTOCategory) null);
      assertNull(category0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      DTOCategory dTOCategory0 = productMapperImpl0.categoryToDTOCategory((Category) null);
      assertNull(dTOCategory0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      DTOCategory dTOCategory0 = new DTOCategory("");
      Category category0 = productMapperImpl0.dTOCategoryToCategory(dTOCategory0);
      DTOCategory dTOCategory1 = productMapperImpl0.categoryToDTOCategory(category0);
      assertEquals("", dTOCategory1.getName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      DTOProduct dTOProduct0 = new DTOProduct();
      Product product0 = productMapperImpl0.DTOProductToProduct(dTOProduct0);
      Image image0 = new Image();
      product0.setImage(image0);
      DTOProduct dTOProduct1 = productMapperImpl0.ProductToDTOProduct(product0);
      assertFalse(dTOProduct1.equals((Object)dTOProduct0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      Subcategory subcategory0 = new Subcategory((Long) null, "B.p9d3W-FQ{");
      DTOSubcategory dTOSubcategory0 = productMapperImpl0.subcategoryToDTOSubcategory(subcategory0);
      Subcategory subcategory1 = productMapperImpl0.dTOSubcategoryToSubcategory(dTOSubcategory0);
      assertNotSame(subcategory0, subcategory1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      Product product0 = productMapperImpl0.DTOProductToProduct((DTOProduct) null);
      assertNull(product0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      DTOProduct dTOProduct0 = new DTOProduct();
      Product product0 = productMapperImpl0.DTOProductToProduct(dTOProduct0);
      DTOProduct dTOProduct1 = productMapperImpl0.ProductToDTOProduct(product0);
      assertNull(dTOProduct1.getImageUrl());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      DTOProduct dTOProduct0 = productMapperImpl0.ProductToDTOProduct((Product) null);
      assertNull(dTOProduct0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProductMapperImpl productMapperImpl0 = new ProductMapperImpl();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Category category0 = new Category();
      Subcategory subcategory0 = new Subcategory("bp8[,L5N", category0);
      Image image0 = new Image("bp8[,L5N");
      Product product0 = new Product("bp8[,L5N", "bp8[,L5N", bigDecimal0, subcategory0, image0);
      DTOProduct dTOProduct0 = productMapperImpl0.ProductToDTOProduct(product0);
      assertNull(dTOProduct0.getImageUrl());
  }
}
