/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 21:52:53 GMT 2024
 */

package hr.algebra.api.webshop2024api.ApiMapper;

import org.junit.Test;
import static org.junit.Assert.*;
import hr.algebra.api.webshop2024api.ApiDTO.DTOCategory;
import hr.algebra.api.webshop2024api.ApiDTO.DTOOrder;
import hr.algebra.api.webshop2024api.ApiDTO.DTOOrderItem;
import hr.algebra.api.webshop2024api.ApiDTO.DTOProduct;
import hr.algebra.api.webshop2024api.ApiDTO.DTOSubcategory;
import hr.algebra.api.webshop2024api.ApiMapper.OrderItemMapperImpl;
import hr.algebra.dal.webshop2024dal.Entity.Category;
import hr.algebra.dal.webshop2024dal.Entity.Order;
import hr.algebra.dal.webshop2024dal.Entity.OrderItem;
import hr.algebra.dal.webshop2024dal.Entity.Product;
import hr.algebra.dal.webshop2024dal.Entity.Subcategory;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.LocalDateTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class OrderItemMapperImpl_ESTest extends OrderItemMapperImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      DTOSubcategory dTOSubcategory0 = orderItemMapperImpl0.subcategoryToDTOSubcategory((Subcategory) null);
      assertNull(dTOSubcategory0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      DTOProduct dTOProduct0 = orderItemMapperImpl0.productToDTOProduct((Product) null);
      assertNull(dTOProduct0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      DTOOrder dTOOrder0 = orderItemMapperImpl0.orderToDTOOrder((Order) null);
      assertNull(dTOOrder0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      Subcategory subcategory0 = orderItemMapperImpl0.dTOSubcategoryToSubcategory((DTOSubcategory) null);
      assertNull(subcategory0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      Category category0 = orderItemMapperImpl0.dTOCategoryToCategory((DTOCategory) null);
      assertNull(category0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      DTOCategory dTOCategory0 = orderItemMapperImpl0.categoryToDTOCategory((Category) null);
      assertNull(dTOCategory0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      Product product0 = orderItemMapperImpl0.dTOProductToProduct((DTOProduct) null);
      assertNull(product0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      Order order0 = orderItemMapperImpl0.dTOOrderToOrder((DTOOrder) null);
      assertNull(order0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      DTOProduct dTOProduct0 = new DTOProduct();
      Product product0 = orderItemMapperImpl0.dTOProductToProduct(dTOProduct0);
      DTOProduct dTOProduct1 = orderItemMapperImpl0.productToDTOProduct(product0);
      assertNull(dTOProduct1.getB64image());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      DTOSubcategory dTOSubcategory0 = new DTOSubcategory();
      Subcategory subcategory0 = orderItemMapperImpl0.dTOSubcategoryToSubcategory(dTOSubcategory0);
      DTOSubcategory dTOSubcategory1 = orderItemMapperImpl0.subcategoryToDTOSubcategory(subcategory0);
      assertFalse(dTOSubcategory1.equals((Object)dTOSubcategory0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      DTOCategory dTOCategory0 = new DTOCategory((Long) null, "vX");
      Category category0 = orderItemMapperImpl0.dTOCategoryToCategory(dTOCategory0);
      DTOCategory dTOCategory1 = orderItemMapperImpl0.categoryToDTOCategory(category0);
      assertEquals("vX", dTOCategory1.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      Order order0 = new Order();
      DTOOrder dTOOrder0 = orderItemMapperImpl0.orderToDTOOrder(order0);
      Order order1 = orderItemMapperImpl0.dTOOrderToOrder(dTOOrder0);
      assertNull(order1.getUsername());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      OrderItem orderItem0 = orderItemMapperImpl0.DTOOrderItemToOrderItem((DTOOrderItem) null);
      assertNull(orderItem0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      BigInteger bigInteger0 = BigInteger.ONE;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      DTOOrder dTOOrder0 = new DTOOrder("", (LocalDateTime) null, bigDecimal0, "");
      DTOProduct dTOProduct0 = new DTOProduct("", "", bigDecimal0, (DTOSubcategory) null, "");
      Integer integer0 = new Integer((-1));
      DTOOrderItem dTOOrderItem0 = new DTOOrderItem(dTOOrder0, dTOProduct0, integer0, bigDecimal0);
      OrderItem orderItem0 = orderItemMapperImpl0.DTOOrderItemToOrderItem(dTOOrderItem0);
      assertNull(orderItem0.getOrderItemId());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      DTOOrderItem dTOOrderItem0 = orderItemMapperImpl0.OrderItemToDTOOrderItem((OrderItem) null);
      assertNull(dTOOrderItem0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OrderItemMapperImpl orderItemMapperImpl0 = new OrderItemMapperImpl();
      OrderItem orderItem0 = new OrderItem();
      DTOOrderItem dTOOrderItem0 = orderItemMapperImpl0.OrderItemToDTOOrderItem(orderItem0);
      assertNull(dTOOrderItem0.getQuantity());
  }
}
