/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 22:15:56 GMT 2024
 */

package hr.algebra.api.webshop2024api.ApiMapper;

import org.junit.Test;
import static org.junit.Assert.*;
import hr.algebra.api.webshop2024api.ApiDTO.DTOAuthority;
import hr.algebra.api.webshop2024api.ApiDTO.DTOUser;
//import hr.algebra.api.webshop2024api.ApiMapper.AuthorityMapperImpl;
import hr.algebra.dal.webshop2024dal.Entity.Authority;
import hr.algebra.dal.webshop2024dal.Entity.User;
import hr.algebra.dal.webshop2024dal.Enum.Role;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class AuthorityMapperImpl_ESTest extends AuthorityMapperImpl_ESTest_scaffolding {

    /*
  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      dTOAuthority0.toString();
      dTOAuthority0.toString();
      dTOAuthority0.setUser((DTOUser) null);
      authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority0);
      authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority0);
      User user0 = new User();
      user0.toString();
      Set<Authority> set0 = user0.getAuthorities();
      User user1 = new User("gH*qtX=HpI>im", false, "gH*qtX=HpI>im", set0);
      Set<Authority> set1 = user1.getAuthorities();
      user1.toString();
      user0.setAuthorities(set0);
      Set<DTOAuthority> set2 = authorityMapperImpl0.authoritySetToDTOAuthoritySet(set1);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(set2);
      Set<Authority> set3 = authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(set2);
      authorityMapperImpl0.dTOUserToUser((DTOUser) null);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(set2);
      Set<DTOAuthority> set4 = authorityMapperImpl0.authoritySetToDTOAuthoritySet(set3);
      authorityMapperImpl0.userToDTOUser(user1);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(set4);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(set4);
      Authority authority0 = authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority0);
      authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      authorityMapperImpl0.authoritySetToDTOAuthoritySet(set3);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(set2);
      LinkedHashSet<Authority> linkedHashSet0 = new LinkedHashSet<Authority>();
      Set<DTOAuthority> set5 = authorityMapperImpl0.authoritySetToDTOAuthoritySet(linkedHashSet0);
      assertTrue(set5.equals((Object)set4));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      Authority authority0 = new Authority();
      DTOAuthority dTOAuthority0 = authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      Role role0 = Role.ROLE_SHOPPER;
      authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      dTOAuthority0.setAuthority(role0);
      Authority authority1 = authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority0);
      DTOAuthority dTOAuthority1 = authorityMapperImpl0.AuthorityToDTOAuthority(authority1);
      authorityMapperImpl0.userToDTOUser((User) null);
      dTOAuthority0.setUser((DTOUser) null);
      authorityMapperImpl0.userToDTOUser((User) null);
      Authority authority2 = authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority1);
      authorityMapperImpl0.userToDTOUser((User) null);
      authorityMapperImpl0.AuthorityToDTOAuthority(authority2);
      authorityMapperImpl0.AuthorityToDTOAuthority(authority2);
      DTOUser dTOUser0 = authorityMapperImpl0.userToDTOUser((User) null);
      assertNull(dTOUser0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      User user0 = new User();
      DTOUser dTOUser0 = authorityMapperImpl0.userToDTOUser(user0);
      user0.setPassword("U");
      Authority authority0 = new Authority();
      authority0.toString();
      DTOAuthority dTOAuthority0 = authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      authority0.setUser(user0);
      authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority0);
      Set<DTOAuthority> set0 = dTOUser0.getAuthorities();
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(set0);
      DTOAuthority dTOAuthority1 = authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      Long long0 = new Long(1L);
      dTOAuthority1.setId(long0);
      authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority1);
      authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      authorityMapperImpl0.DTOAuthorityToAuthority((DTOAuthority) null);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(set0);
      authorityMapperImpl0.AuthorityToDTOAuthority((Authority) null);
      DTOAuthority dTOAuthority2 = authorityMapperImpl0.AuthorityToDTOAuthority((Authority) null);
      assertNull(dTOAuthority2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      DTOUser dTOUser0 = new DTOUser();
      User user0 = authorityMapperImpl0.dTOUserToUser(dTOUser0);
      LinkedHashSet<Authority> linkedHashSet0 = new LinkedHashSet<Authority>();
      Set<DTOAuthority> set0 = authorityMapperImpl0.authoritySetToDTOAuthoritySet(linkedHashSet0);
      dTOUser0.setEmail("dD>R");
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(set0);
      user0.setAuthorities(linkedHashSet0);
      Role role0 = Role.ROLE_SHOPPER;
      Authority authority0 = new Authority(user0, role0);
      authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      user0.setUsername("");
      Role role1 = Role.ROLE_SHOPPER;
      authority0.setAuthority(role1);
      dTOUser0.setEnabled(true);
      authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      authorityMapperImpl0.userToDTOUser(user0);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      authorityMapperImpl0.userToDTOUser(user0);
      Set<DTOAuthority> set1 = authorityMapperImpl0.authoritySetToDTOAuthoritySet((Set<Authority>) null);
      assertNull(set1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      LinkedHashSet<DTOAuthority> linkedHashSet0 = new LinkedHashSet<DTOAuthority>();
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      linkedHashSet0.add(dTOAuthority0);
      DTOUser dTOUser0 = new DTOUser("", "", false, "", linkedHashSet0);
      LinkedHashSet<Object> linkedHashSet1 = new LinkedHashSet<Object>();
      linkedHashSet1.addAll(linkedHashSet0);
      linkedHashSet0.retainAll(linkedHashSet1);
      User user0 = authorityMapperImpl0.dTOUserToUser(dTOUser0);
      DTOUser dTOUser1 = authorityMapperImpl0.userToDTOUser(user0);
      Set<Authority> set0 = authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(linkedHashSet0);
      authorityMapperImpl0.authoritySetToDTOAuthoritySet(set0);
      User user1 = authorityMapperImpl0.dTOUserToUser(dTOUser1);
      assertEquals("", user1.getPassword());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      AuthorityMapperImpl authorityMapperImpl1 = new AuthorityMapperImpl();
      LinkedHashSet<DTOAuthority> linkedHashSet0 = new LinkedHashSet<DTOAuthority>();
      Set<Authority> set0 = authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(linkedHashSet0);
      Set<DTOAuthority> set1 = authorityMapperImpl1.authoritySetToDTOAuthoritySet(set0);
      DTOUser dTOUser0 = new DTOUser("<~#OW0L_H!l!Q", "<~#OW0L_H!l!Q", true, ")", set1);
      authorityMapperImpl0.dTOUserToUser(dTOUser0);
      LinkedHashSet<DTOAuthority> linkedHashSet1 = new LinkedHashSet<DTOAuthority>();
      Set<Authority> set2 = authorityMapperImpl1.dTOAuthoritySetToAuthoritySet(linkedHashSet1);
      authorityMapperImpl0.authoritySetToDTOAuthoritySet(set2);
      authorityMapperImpl0.DTOAuthorityToAuthority((DTOAuthority) null);
      authorityMapperImpl1.AuthorityToDTOAuthority((Authority) null);
      LinkedHashSet<DTOAuthority> linkedHashSet2 = new LinkedHashSet<DTOAuthority>();
      Set<Authority> set3 = authorityMapperImpl1.dTOAuthoritySetToAuthoritySet(linkedHashSet2);
      authorityMapperImpl1.authoritySetToDTOAuthoritySet(set3);
      authorityMapperImpl1.DTOAuthorityToAuthority((DTOAuthority) null);
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      Authority authority0 = authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority0);
      assertNull(authority0.getAuthority());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      LinkedHashSet<DTOAuthority> linkedHashSet0 = new LinkedHashSet<DTOAuthority>();
      DTOUser dTOUser0 = new DTOUser("1", "hpkZ?r(B.r[/cb", true, (String) null, linkedHashSet0);
      Role role0 = Role.ROLE_SHOPPER;
      DTOAuthority dTOAuthority0 = new DTOAuthority(dTOUser0, role0);
      User user0 = new User();
      DTOUser dTOUser1 = authorityMapperImpl0.userToDTOUser(user0);
      dTOUser0.toString();
      dTOUser1.setEnabled(false);
      LinkedHashSet<Authority> linkedHashSet1 = new LinkedHashSet<Authority>();
      user0.setAuthorities(linkedHashSet1);
      dTOAuthority0.setUser(dTOUser1);
      dTOAuthority0.setAuthority(role0);
      linkedHashSet0.add(dTOAuthority0);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(linkedHashSet0);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(linkedHashSet0);
      User user1 = authorityMapperImpl0.dTOUserToUser(dTOUser0);
      Set<Authority> set0 = user0.getAuthorities();
      user1.setEmail("");
      user1.toString();
      user1.setEmail("3vQW!in}x.8&<'P");
      user1.setAuthorities(set0);
      authorityMapperImpl0.userToDTOUser(user1);
      dTOUser0.setEmail("3vQW!in}x.8&<'P");
      DTOAuthority dTOAuthority1 = new DTOAuthority(dTOUser0, role0);
      authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority1);
      Authority authority0 = authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority1);
      authorityMapperImpl0.userToDTOUser(user0);
      authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(linkedHashSet0);
      User user2 = authorityMapperImpl0.dTOUserToUser(dTOUser1);
      assertNotSame(user0, user2);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      DTOUser dTOUser0 = new DTOUser();
      Role role0 = Role.ROLE_ADMIN;
      DTOAuthority dTOAuthority0 = new DTOAuthority(dTOUser0, role0);
      dTOAuthority0.setUser(dTOUser0);
      dTOAuthority0.toString();
      Long long0 = new Long((-505L));
      dTOAuthority0.setId(long0);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      authorityMapperImpl0.authoritySetToDTOAuthoritySet((Set<Authority>) null);
      dTOUser0.setAuthorities((Set<DTOAuthority>) null);
      Long long1 = new Long(0L);
      dTOAuthority0.setId(long1);
      authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority0);
      User user0 = new User("DTOAuthority(id=null, user=DTOUser(username=null, password=null, enabled=false, email=null, authorities=[]), authority=ROLE_ADMIN)", false, "`eSEOp`qs3UvQ.#", (Set<Authority>) null);
      user0.setEnabled(false);
      authorityMapperImpl0.userToDTOUser(user0);
      authorityMapperImpl0.authoritySetToDTOAuthoritySet((Set<Authority>) null);
      User user1 = authorityMapperImpl0.dTOUserToUser(dTOUser0);
      authorityMapperImpl0.authoritySetToDTOAuthoritySet((Set<Authority>) null);
      Authority authority0 = authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority0);
      authority0.setAuthority(role0);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority0);
      authorityMapperImpl0.dTOUserToUser(dTOUser0);
      authorityMapperImpl0.authoritySetToDTOAuthoritySet((Set<Authority>) null);
      DTOAuthority dTOAuthority1 = authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      user1.getAuthorities();
      authorityMapperImpl0.authoritySetToDTOAuthoritySet((Set<Authority>) null);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority1);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      Set<Authority> set0 = authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      LinkedHashSet<Authority> linkedHashSet0 = new LinkedHashSet<Authority>();
      Authority authority0 = new Authority();
      linkedHashSet0.add(authority0);
      Set<DTOAuthority> set0 = authorityMapperImpl0.authoritySetToDTOAuthoritySet(linkedHashSet0);
      Set<Authority> set1 = authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(set0);
      User user0 = new User("tln^FcV@dE.", false, "tln^FcV@dE.", set1);
      DTOUser dTOUser0 = authorityMapperImpl0.userToDTOUser(user0);
      Role role0 = Role.ROLE_SHOPPER;
      DTOAuthority dTOAuthority0 = new DTOAuthority(dTOUser0, role0);
      authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority0);
      assertEquals(1, linkedHashSet0.size());
      assertFalse(set1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      DTOUser dTOUser0 = new DTOUser();
      Set<DTOAuthority> set0 = dTOUser0.getAuthorities();
      DTOUser dTOUser1 = new DTOUser("FSL`1Mzl3I", "FSL`1Mzl3I", false, "FSL`1Mzl3I", set0);
      User user0 = authorityMapperImpl0.dTOUserToUser(dTOUser1);
      authorityMapperImpl0.userToDTOUser(user0);
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      dTOAuthority0.getId();
      dTOAuthority0.setId((Long) null);
      Authority authority0 = authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority0);
      LinkedHashSet<Authority> linkedHashSet0 = new LinkedHashSet<Authority>();
      authorityMapperImpl0.authoritySetToDTOAuthoritySet(linkedHashSet0);
      authorityMapperImpl0.authoritySetToDTOAuthoritySet(linkedHashSet0);
      dTOUser0.setAuthorities(set0);
      authorityMapperImpl0.dTOUserToUser(dTOUser1);
      User user1 = new User();
      user1.setEnabled(false);
      authorityMapperImpl0.userToDTOUser(user1);
      Set<DTOAuthority> set1 = authorityMapperImpl0.authoritySetToDTOAuthoritySet(linkedHashSet0);
      authorityMapperImpl0.userToDTOUser(user0);
      DTOAuthority dTOAuthority1 = authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      User user2 = authorityMapperImpl0.dTOUserToUser(dTOUser1);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      Set<Authority> set2 = user2.getAuthorities();
      authorityMapperImpl0.authoritySetToDTOAuthoritySet(set2);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      DTOAuthority dTOAuthority2 = authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(set1);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(set1);
      authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      authorityMapperImpl0.dTOUserToUser(dTOUser1);
      authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      Authority authority1 = authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority2);
      authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority1);
      DTOAuthority dTOAuthority3 = authorityMapperImpl0.AuthorityToDTOAuthority(authority0);
      Authority authority2 = authorityMapperImpl0.DTOAuthorityToAuthority(dTOAuthority3);
      assertNotSame(authority2, authority1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      authorityMapperImpl0.DTOAuthorityToAuthority((DTOAuthority) null);
      DTOAuthority dTOAuthority0 = authorityMapperImpl0.AuthorityToDTOAuthority((Authority) null);
      assertNull(dTOAuthority0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      authorityMapperImpl0.authoritySetToDTOAuthoritySet((Set<Authority>) null);
      Set<Authority> set0 = authorityMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AuthorityMapperImpl authorityMapperImpl0 = new AuthorityMapperImpl();
      LinkedHashSet<DTOAuthority> linkedHashSet0 = new LinkedHashSet<DTOAuthority>();
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      linkedHashSet0.add(dTOAuthority0);
      DTOUser dTOUser0 = new DTOUser("", "", false, "", linkedHashSet0);
      User user0 = authorityMapperImpl0.dTOUserToUser(dTOUser0);
      authorityMapperImpl0.userToDTOUser(user0);
      assertEquals(1, linkedHashSet0.size());
      
      Set<Authority> set0 = authorityMapperImpl0.dTOAuthoritySetToAuthoritySet(linkedHashSet0);
      assertEquals(1, set0.size());
  }
     */
}
