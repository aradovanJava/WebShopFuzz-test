/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 22:30:58 GMT 2024
 */

package hr.algebra.api.webshop2024api.ApiMapper;

import org.junit.Test;
import static org.junit.Assert.*;
import hr.algebra.api.webshop2024api.ApiDTO.DTOAuthority;
import hr.algebra.api.webshop2024api.ApiDTO.DTOUser;
import hr.algebra.api.webshop2024api.ApiMapper.UserMapperImpl;
import hr.algebra.dal.webshop2024dal.Entity.Authority;
import hr.algebra.dal.webshop2024dal.Entity.User;
import hr.algebra.dal.webshop2024dal.Enum.Role;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class UserMapperImpl_ESTest extends UserMapperImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      LinkedHashSet<DTOAuthority> linkedHashSet0 = new LinkedHashSet<DTOAuthority>();
      Set<Authority> set0 = userMapperImpl0.dTOAuthoritySetToAuthoritySet(linkedHashSet0);
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      Role role0 = Role.ROLE_SHOPPER;
      Authority authority0 = new Authority((User) null, role0);
      DTOAuthority dTOAuthority0 = userMapperImpl0.authorityToDTOAuthority(authority0);
      assertEquals(Role.ROLE_SHOPPER, dTOAuthority0.getAuthority());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      LinkedHashSet<Authority> linkedHashSet0 = new LinkedHashSet<Authority>();
      Set<DTOAuthority> set0 = userMapperImpl0.authoritySetToDTOAuthoritySet(linkedHashSet0);
      assertEquals(0, set0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      User user0 = new User("E~A}Q", true, "E~A}Q", (Set<Authority>) null);
      DTOUser dTOUser0 = userMapperImpl0.UserToDTOUser(user0);
      User user1 = userMapperImpl0.DTOUserToUser(dTOUser0);
      assertFalse(user1.equals((Object)user0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      User user0 = userMapperImpl0.DTOUserToUser((DTOUser) null);
      assertNull(user0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      DTOUser dTOUser0 = userMapperImpl0.UserToDTOUser((User) null);
      assertNull(dTOUser0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      Set<Authority> set0 = userMapperImpl0.dTOAuthoritySetToAuthoritySet((Set<DTOAuthority>) null);
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      Authority authority0 = userMapperImpl0.dTOAuthorityToAuthority((DTOAuthority) null);
      assertNull(authority0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      Set<DTOAuthority> set0 = userMapperImpl0.authoritySetToDTOAuthoritySet((Set<Authority>) null);
      assertNull(set0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      DTOAuthority dTOAuthority0 = userMapperImpl0.authorityToDTOAuthority((Authority) null);
      assertNull(dTOAuthority0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      LinkedHashSet<Authority> linkedHashSet0 = new LinkedHashSet<Authority>();
      DTOAuthority dTOAuthority0 = new DTOAuthority();
      Authority authority0 = userMapperImpl0.dTOAuthorityToAuthority(dTOAuthority0);
      linkedHashSet0.add(authority0);
      Set<DTOAuthority> set0 = userMapperImpl0.authoritySetToDTOAuthoritySet(linkedHashSet0);
      userMapperImpl0.dTOAuthoritySetToAuthoritySet(set0);
      assertEquals(1, linkedHashSet0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserMapperImpl userMapperImpl0 = new UserMapperImpl();
      DTOUser dTOUser0 = new DTOUser();
      User user0 = userMapperImpl0.DTOUserToUser(dTOUser0);
      DTOUser dTOUser1 = userMapperImpl0.UserToDTOUser(user0);
      assertNotSame(dTOUser0, dTOUser1);
  }
}
