/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 21:52:22 GMT 2024
 */

package hr.algebra.dal.webshop2024dal.Entity;

import org.junit.Test;
import static org.junit.Assert.*;
import hr.algebra.dal.webshop2024dal.Entity.CartItem;
import hr.algebra.dal.webshop2024dal.Entity.Product;
import hr.algebra.dal.webshop2024dal.Entity.ShoppingCart;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CartItem_ESTest extends CartItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CartItem cartItem0 = new CartItem();
      ShoppingCart shoppingCart0 = cartItem0.getShoppingCart();
      assertNull(shoppingCart0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(0);
      CartItem cartItem0 = new CartItem((ShoppingCart) null, (Product) null, integer0);
      Integer integer1 = cartItem0.getQuantity();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CartItem cartItem0 = new CartItem();
      Integer integer0 = new Integer(1020);
      cartItem0.setQuantity(integer0);
      Integer integer1 = cartItem0.getQuantity();
      assertEquals(1020, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CartItem cartItem0 = new CartItem();
      Integer integer0 = cartItem0.getQuantity();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CartItem cartItem0 = new CartItem();
      Product product0 = new Product();
      cartItem0.setProduct(product0);
      Product product1 = cartItem0.getProduct();
      assertNull(product1.getProductId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CartItem cartItem0 = new CartItem();
      Long long0 = new Long(0);
      cartItem0.setCartItemId(long0);
      Long long1 = cartItem0.getCartItemId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CartItem cartItem0 = new CartItem();
      Long long0 = new Long(1L);
      cartItem0.setCartItemId(long0);
      Long long1 = cartItem0.getCartItemId();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CartItem cartItem0 = new CartItem();
      Long long0 = new Long((-931L));
      cartItem0.setCartItemId(long0);
      Long long1 = cartItem0.getCartItemId();
      assertEquals((-931L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CartItem cartItem0 = new CartItem();
      Product product0 = cartItem0.getProduct();
      assertNull(product0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ShoppingCart shoppingCart0 = new ShoppingCart();
      Product product0 = new Product();
      Integer integer0 = new Integer((-2032));
      CartItem cartItem0 = new CartItem(shoppingCart0, product0, integer0);
      ShoppingCart shoppingCart1 = cartItem0.getShoppingCart();
      assertNull(shoppingCart1.getSessionId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ShoppingCart shoppingCart0 = new ShoppingCart();
      Product product0 = new Product();
      Integer integer0 = new Integer((-2032));
      CartItem cartItem0 = new CartItem(shoppingCart0, product0, integer0);
      Integer integer1 = cartItem0.getQuantity();
      assertEquals((-2032), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Product product0 = new Product();
      Integer integer0 = new Integer(65);
      CartItem cartItem0 = new CartItem((ShoppingCart) null, product0, integer0);
      cartItem0.setShoppingCart((ShoppingCart) null);
      assertNull(cartItem0.getCartItemId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Product product0 = new Product();
      Integer integer0 = new Integer(65);
      CartItem cartItem0 = new CartItem((ShoppingCart) null, product0, integer0);
      String string0 = cartItem0.toString();
      assertEquals("CartItem(cartItemId=null, shoppingCart=null, product=Product(productId=null, name=null, description=null, price=null, subcategory=null, image=null), quantity=65)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CartItem cartItem0 = new CartItem();
      Long long0 = cartItem0.getCartItemId();
      assertNull(long0);
  }
}
