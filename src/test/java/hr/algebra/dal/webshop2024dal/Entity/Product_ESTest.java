/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 21:58:08 GMT 2024
 */

package hr.algebra.dal.webshop2024dal.Entity;

import org.junit.Test;
import static org.junit.Assert.*;
import hr.algebra.dal.webshop2024dal.Entity.Category;
import hr.algebra.dal.webshop2024dal.Entity.Image;
import hr.algebra.dal.webshop2024dal.Entity.Product;
import hr.algebra.dal.webshop2024dal.Entity.Subcategory;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Product_ESTest extends Product_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Subcategory subcategory0 = new Subcategory(", name=", (Category) null);
      Image image0 = new Image();
      Product product0 = new Product(", name=", "", bigDecimal0, subcategory0, image0);
      product0.getSubcategory();
      assertEquals("", product0.getDescription());
      assertEquals(", name=", product0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Product product0 = new Product();
      Long long0 = new Long(0L);
      product0.setProductId(long0);
      Long long1 = product0.getProductId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Product product0 = new Product();
      Long long0 = Long.valueOf(3328L);
      product0.setProductId(long0);
      Long long1 = product0.getProductId();
      assertEquals(3328L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Product product0 = new Product();
      Long long0 = new Long((-3622L));
      product0.setProductId(long0);
      Long long1 = product0.getProductId();
      assertEquals((-3622L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Product product0 = new Product();
      BigDecimal bigDecimal0 = new BigDecimal(0.0);
      product0.setPrice(bigDecimal0);
      BigDecimal bigDecimal1 = product0.getPrice();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Product product0 = new Product();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      product0.setPrice(bigDecimal0);
      BigDecimal bigDecimal1 = product0.getPrice();
      assertEquals((short)1, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Product product0 = new Product();
      BigDecimal bigDecimal0 = new BigDecimal((-1));
      product0.setPrice(bigDecimal0);
      BigDecimal bigDecimal1 = product0.getPrice();
      assertEquals((short) (-1), bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Image image0 = new Image((String) null);
      Product product0 = new Product(">S3", ">S3", bigDecimal0, (Subcategory) null, image0);
      String string0 = product0.getName();
      assertEquals(">S3", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Image image0 = new Image();
      Product product0 = new Product("", "", bigDecimal0, (Subcategory) null, image0);
      String string0 = product0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Product product0 = new Product();
      Image image0 = product0.getImage();
      assertNull(image0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Product product0 = new Product();
      String string0 = product0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Product product0 = new Product();
      product0.setDescription("9VL+3qv'");
      String string0 = product0.getDescription();
      assertEquals("9VL+3qv'", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Image image0 = new Image((String) null);
      Product product0 = new Product(">S3", ">S3", bigDecimal0, (Subcategory) null, image0);
      Subcategory subcategory0 = product0.getSubcategory();
      assertNull(subcategory0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Image image0 = new Image();
      Product product0 = new Product("", "", bigDecimal0, (Subcategory) null, image0);
      String string0 = product0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Image image0 = new Image();
      Product product0 = new Product("", "", bigDecimal0, (Subcategory) null, image0);
      Image image1 = product0.getImage();
      assertNull(image1.getImageId());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Product product0 = new Product();
      Long long0 = product0.getProductId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Product product0 = new Product();
      String string0 = product0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Subcategory subcategory0 = new Subcategory();
      Image image0 = new Image();
      Product product0 = new Product("&", "&", bigDecimal0, subcategory0, image0);
      product0.setSubcategory(subcategory0);
      assertNull(subcategory0.getName());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Subcategory subcategory0 = new Subcategory();
      Image image0 = new Image();
      Product product0 = new Product("&", "&", bigDecimal0, subcategory0, image0);
      product0.setName("&");
      assertEquals("&", product0.getDescription());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Product product0 = new Product();
      BigDecimal bigDecimal0 = product0.getPrice();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      Subcategory subcategory0 = new Subcategory();
      Image image0 = new Image();
      Product product0 = new Product("&", "&", bigDecimal0, subcategory0, image0);
      product0.setImage(image0);
      assertNull(image0.getB64image());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      Subcategory subcategory0 = new Subcategory(", name=", (Category) null);
      Image image0 = new Image();
      Product product0 = new Product(", name=", "", bigDecimal0, subcategory0, image0);
      String string0 = product0.toString();
      assertEquals("Product(productId=null, name=, name=, description=, price=1, subcategory=Subcategory(subcategoryId=null, name=, name=, category=null), image=Image(imageId=null, b64image=null))", string0);
  }
}
