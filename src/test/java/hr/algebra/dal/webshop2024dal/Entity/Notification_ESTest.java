/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 22:22:26 GMT 2024
 */

package hr.algebra.dal.webshop2024dal.Entity;

import org.junit.Test;
import static org.junit.Assert.*;
import hr.algebra.dal.webshop2024dal.Entity.Authority;
import hr.algebra.dal.webshop2024dal.Entity.Notification;
import hr.algebra.dal.webshop2024dal.Entity.User;
import java.time.Clock;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Notification_ESTest extends Notification_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      User user0 = new User();
      Clock clock0 = MockClock.systemUTC();
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      Long long0 = new Long(0L);
      Notification notification0 = new Notification(long0, user0, "\u0001F.st/uJYc-", "JX!5HJ3K93$Fn", localDateTime0, (LocalDateTime) null, true);
      assertEquals("JX!5HJ3K93$Fn", notification0.getMessage());
      assertEquals("\u0001F.st/uJYc-", notification0.getTitle());
      assertTrue(notification0.isViewed());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      User user0 = new User();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      LocalDateTime localDateTime1 = MockLocalDateTime.ofEpochSecond(0L, 0, zoneOffset0);
      Notification notification0 = new Notification(user0, "", "", localDateTime0, localDateTime1, false);
      assertFalse(notification0.isViewed());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Notification notification0 = new Notification();
      notification0.setViewed(true);
      boolean boolean0 = notification0.isViewed();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Notification notification0 = new Notification();
      User user0 = notification0.getUser();
      assertNull(user0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      User user0 = new User();
      Set<Authority> set0 = user0.getAuthorities();
      User user1 = new User("hr.algebra.dal.webshop2024dal.Entity.Notification", true, "hr.algebra.dal.webshop2024dal.Entity.Notification", set0);
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDateTime localDateTime0 = MockLocalDateTime.now((ZoneId) zoneOffset0);
      Notification notification0 = new Notification(user1, "SE\u0000,~]2v13", "SE\u0000,~]2v13", localDateTime0, localDateTime0, true);
      notification0.getUser();
      assertTrue(notification0.isViewed());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Notification notification0 = new Notification();
      String string0 = notification0.getTitle();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Long long0 = new Long((-1L));
      User user0 = new User();
      Notification notification0 = new Notification(long0, user0, "", "P'AE3D)mu2QjHE1", (LocalDateTime) null, (LocalDateTime) null, false);
      String string0 = notification0.getTitle();
      assertFalse(notification0.isViewed());
      assertEquals("P'AE3D)mu2QjHE1", notification0.getMessage());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedHashSet<Authority> linkedHashSet0 = new LinkedHashSet<Authority>();
      User user0 = new User("<2D2)uh`Qjq4`U$L)", false, "", linkedHashSet0);
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Notification notification0 = new Notification(user0, "", "<2D2)uh`Qjq4`U$L)", localDateTime0, localDateTime0, false);
      notification0.getReadAt();
      assertFalse(notification0.isViewed());
      assertEquals("<2D2)uh`Qjq4`U$L)", notification0.getMessage());
      assertEquals("", notification0.getTitle());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      User user0 = new User("", true, (String) null, (Set<Authority>) null);
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Notification notification0 = new Notification(user0, "oNqtB'", "[N9EXu[qz&qQ5@(<u", localDateTime0, localDateTime0, true);
      Long long0 = new Long(676L);
      notification0.setNotificationId(long0);
      notification0.getNotificationId();
      assertEquals("[N9EXu[qz&qQ5@(<u", notification0.getMessage());
      assertEquals("oNqtB'", notification0.getTitle());
      assertTrue(notification0.isViewed());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Notification notification0 = new Notification();
      Long long0 = notification0.getNotificationId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Long long0 = new Long((-1L));
      User user0 = new User();
      Notification notification0 = new Notification(long0, user0, "", "P'AE3D)mu2QjHE1", (LocalDateTime) null, (LocalDateTime) null, false);
      notification0.getNotificationId();
      assertEquals("P'AE3D)mu2QjHE1", notification0.getMessage());
      assertFalse(notification0.isViewed());
      assertEquals("", notification0.getTitle());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Notification notification0 = new Notification();
      String string0 = notification0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long((-1L));
      User user0 = new User();
      Notification notification0 = new Notification(long0, user0, "", "P'AE3D)mu2QjHE1", (LocalDateTime) null, (LocalDateTime) null, false);
      assertEquals("P'AE3D)mu2QjHE1", notification0.getMessage());
      
      notification0.setMessage("");
      notification0.getMessage();
      assertFalse(notification0.isViewed());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Notification notification0 = new Notification();
      LocalDateTime localDateTime0 = MockLocalDateTime.of(1, 1, 1, 1, 1, 1, 1);
      notification0.setCreatedAt(localDateTime0);
      LocalDateTime localDateTime1 = notification0.getCreatedAt();
      assertSame(localDateTime1, localDateTime0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Long long0 = new Long(0L);
      User user0 = new User();
      Notification notification0 = new Notification(long0, user0, "N`0'}^r6hw|", "1D;jl", (LocalDateTime) null, (LocalDateTime) null, false);
      boolean boolean0 = notification0.isViewed();
      assertFalse(boolean0);
      assertEquals("N`0'}^r6hw|", notification0.getTitle());
      assertEquals("1D;jl", notification0.getMessage());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = new Long(0L);
      User user0 = new User();
      Notification notification0 = new Notification(long0, user0, "N`0'}^r6hw|", "1D;jl", (LocalDateTime) null, (LocalDateTime) null, false);
      notification0.getReadAt();
      assertEquals("1D;jl", notification0.getMessage());
      assertFalse(notification0.isViewed());
      assertEquals("N`0'}^r6hw|", notification0.getTitle());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Long long0 = new Long((-1L));
      User user0 = new User();
      Notification notification0 = new Notification(long0, user0, "", "P'AE3D)mu2QjHE1", (LocalDateTime) null, (LocalDateTime) null, false);
      String string0 = notification0.getMessage();
      assertFalse(notification0.isViewed());
      assertEquals("", notification0.getTitle());
      assertEquals("P'AE3D)mu2QjHE1", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Long long0 = new Long(0L);
      User user0 = new User();
      Notification notification0 = new Notification(long0, user0, "N`0'}^r6hw|", "1D;jl", (LocalDateTime) null, (LocalDateTime) null, false);
      notification0.getNotificationId();
      assertEquals("N`0'}^r6hw|", notification0.getTitle());
      assertEquals("1D;jl", notification0.getMessage());
      assertFalse(notification0.isViewed());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Long long0 = new Long(0L);
      User user0 = new User();
      Notification notification0 = new Notification(long0, user0, "N`0'}^r6hw|", "1D;jl", (LocalDateTime) null, (LocalDateTime) null, false);
      String string0 = notification0.getTitle();
      assertEquals("1D;jl", notification0.getMessage());
      assertFalse(notification0.isViewed());
      assertEquals("N`0'}^r6hw|", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Long long0 = new Long(0L);
      User user0 = new User();
      Notification notification0 = new Notification(long0, user0, "N`0'}^r6hw|", "1D;jl", (LocalDateTime) null, (LocalDateTime) null, false);
      notification0.getCreatedAt();
      assertEquals("1D;jl", notification0.getMessage());
      assertEquals("N`0'}^r6hw|", notification0.getTitle());
      assertFalse(notification0.isViewed());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Long long0 = new Long(0L);
      User user0 = new User();
      Notification notification0 = new Notification(long0, user0, "N`0'}^r6hw|", "1D;jl", (LocalDateTime) null, (LocalDateTime) null, false);
      notification0.getUser();
      assertEquals("N`0'}^r6hw|", notification0.getTitle());
      assertEquals("1D;jl", notification0.getMessage());
      assertFalse(notification0.isViewed());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      User user0 = new User();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Notification notification0 = new Notification(user0, "gu_[", "gu_[", localDateTime0, localDateTime0, false);
      notification0.setReadAt(localDateTime0);
      assertFalse(notification0.isViewed());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Notification notification0 = new Notification();
      notification0.setTitle("");
      assertNull(notification0.getNotificationId());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      User user0 = new User();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Notification notification0 = new Notification(user0, "gu_[", "gu_[", localDateTime0, localDateTime0, false);
      notification0.setUser(user0);
      assertFalse(notification0.isViewed());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      User user0 = new User();
      LocalDateTime localDateTime0 = MockLocalDateTime.now();
      Notification notification0 = new Notification(user0, "gu_[", "gu_[", localDateTime0, localDateTime0, false);
      String string0 = notification0.toString();
      assertEquals("Notification(notificationId=null, user=User(username=null, password=null, enabled=false, email=null, authorities=[]), title=gu_[, message=gu_[, createdAt=2014-02-14T20:21:21.320, readAt=2014-02-14T20:21:21.320, viewed=false)", string0);
  }
}
