/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 18 22:10:23 GMT 2024
 */

package hr.algebra.utils.CustomExceptions;

import org.junit.Test;
import static org.junit.Assert.*;
import hr.algebra.utils.CustomExceptions.CustomErrorResponse;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CustomErrorResponse_ESTest extends CustomErrorResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse(0, "", 0);
      customErrorResponse0.getTimeStamp();
      assertEquals(0, customErrorResponse0.getStatus());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse((-1), "{@", (-1));
      customErrorResponse0.setTimeStamp(1574L);
      long long0 = customErrorResponse0.getTimeStamp();
      assertEquals(1574L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse(0, "", 0);
      int int0 = customErrorResponse0.getStatus();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse(0, "4*#yvZ ;jZ@o", 0, hashMap0);
      customErrorResponse0.setStatus(185);
      int int0 = customErrorResponse0.getStatus();
      assertEquals(185, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse();
      String string0 = customErrorResponse0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse(0, "", 0);
      customErrorResponse0.getMessage();
      assertEquals(0, customErrorResponse0.getStatus());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse(0, "4*#yvZ ;jZ@o", 0, hashMap0);
      customErrorResponse0.getErrors();
      assertEquals(0, customErrorResponse0.getStatus());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse((-1), "{@", (-1));
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      hashMap0.put("{@", "{@");
      customErrorResponse0.setErrors(hashMap0);
      customErrorResponse0.getErrors();
      assertEquals((-1), customErrorResponse0.getStatus());
      assertEquals((-1L), customErrorResponse0.getTimeStamp());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse((-1), "{@", (-1));
      customErrorResponse0.getMessage();
      assertEquals((-1L), customErrorResponse0.getTimeStamp());
      assertEquals((-1), customErrorResponse0.getStatus());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse((-1), "{@", (-1));
      int int0 = customErrorResponse0.getStatus();
      assertEquals((-1L), customErrorResponse0.getTimeStamp());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse((-1), "{@", (-1));
      long long0 = customErrorResponse0.getTimeStamp();
      assertEquals((-1L), long0);
      assertEquals((-1), customErrorResponse0.getStatus());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse();
      Map<String, String> map0 = customErrorResponse0.getErrors();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      CustomErrorResponse customErrorResponse0 = new CustomErrorResponse((-12), "Jp", (-12), hashMap0);
      customErrorResponse0.setMessage("Jp");
      assertEquals((-12), customErrorResponse0.getStatus());
      assertEquals((-12L), customErrorResponse0.getTimeStamp());
  }
}
